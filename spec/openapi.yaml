swagger: '2.0'
info:
  description: >
    # Introduction

    Esper APIs are a set of REST-based APIs that help you programmatically control and monitor Android-based Dedicated Devices running the Esper agent using Esper Manage. With these APIs, you can orchestrate and manage devices that have been provisioned against your Esper Manage environment. Furthermore, these APIs allows you to manage the Android applications installed on your Dedicated Device fleet. To read more about the various capabilities of Esper APIs and Esper managed devices, please visit [esper.io](https://esper.io). This guide describes all the available APIs in detail, along with code samples for you to quickly ramp up to using them.\

    To use these APIs you will need to create a developer account with Esper and get access to the Esper Dev Console and the Esper ManageDashboard. You can find out more about Esper and sign up for free at [esper.io/signup](https://esper.io/signup)\

    We've done our best to keep this document up to date, but if you find any issues, please reach out to us at developer@esper.io.


    # SDK

      You are welcome to use your favorite HTTP/REST library for your programming language in order to call these APIs, or you can use our SDK (currently supporting [python](https://github.com/esper-io/esper-client-py)) to do so.


    # Authentication

    The client needs to send authentication details to access the Esper APIs by generating and applying an API key. Be sure to sign up for your free trial account with Esper Dev to generate your key:


    # Errors

    The APIs use standard HTTP status codes to indicate success or failure. All error responses will have a JSON body in the following format:


    ```

    {
      "errors": [],
      "message": "error message",
      "status": 400
    }

    ```

    * `errors` -  List of error details

    * `message` - Error description

    * `status` - HTTP status code


  version: 1.0.0
  title: ESPER API REFERENCE
  termsOfService: 'https://esper.io/terms-of-service'
  contact:
    email: developer@esper.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: foo-api.esper.cloud
basePath: /api
tags:
  - name: Enterprise
    description: The Esper Enterprise APIs to manage the account information set up for your companyâ€™s account. Read our Esper Manage documentation or use the Esper Manage Dashboard through the Esper Developer Console
    externalDocs:
      description: Find out more about enterprise settings
      url: 'https://docs.esper.io/home/console.html#company-settings'
  - name: Application
    description: APIs for application management
    externalDocs:
      description: Find out more about application management
      url: 'https://docs.esper.io/home/console.html#apps'
  - name: Device
    description: APIs for device management
    externalDocs:
      description: Find out more about device management
      url: 'https://docs.esper.io/home/console.html#devices'
  - name: Device Group
    description: APIs for device group management
    externalDocs:
      description: Find out more about device group management
      url: 'https://docs.esper.io/home/console.html#groups'
  - name: Commands
    description: |
      APIs to run device commands.
      `This version of commands is being deprecated and documentation will be archived soon. Please use Commands V2.`
    externalDocs:
      description: Find out more about device commands
      url: 'https://docs.esper.io/home/console/device-management/-/#device-actions'
  - name: Group Commands
    description: APIs to run group commands. Command will be run on all the active devices in a group
    externalDocs:
      description: Find out more in `Actions` of group commands
      url: 'https://docs.esper.io/home/console.html#groups'
  - name: Token
    description: Fetch API token information
    externalDocs:
      description: Find out more about API get generation
      url: 'https://docs.esper.io/home/module/genapikey.html'
  - name: Commands V2
    description: Commands V2.0 is to provide advanced device commands capabilities like queuing, support for offline devices, dynamic device set for commands and command history. Commands 2.0 is in active development and support for all the commands will be added soon.
    externalDocs:
      description: Find out more about commands V2.0
      url: 'https://docs.esper.io/'
  - name: Enterprise Policy
    description: APIs to Esper Compliance Policy
    externalDocs:
      description: Find out more about Compliance Policy
      url: 'https://docs.esper.io/'
  - name: Geofence
    description: APIs for geofence management
    externalDocs:
      description: Find out more about Geofence
      url: 'https://docs.esper.io/home/console.html#geofence'
  - name: Subscription
    description: APIs for Subscription management
    externalDocs:
      description: Find out more about Report
      url: 'https://docs.esper.io/home/console.html#subscription'
  - name: Content
    description: APIs for Content management
    externalDocs:
      description: Find out more about Content management
      url: 'https://docs.esper.io/home/console.html#content'
schemes:
  - https
x-tagGroups:
  - name: API Reference
    tags:
      - Enterprise
      - Application
      - Device
      - Device Group
      - Commands
      - Group Commands
      - Token
      - Commands V2
      - Enterprise Policy
      - Geofence
      - Reports
      - Subscription
      - Content

securityDefinitions:
  apiKey:
    description: |
      #### API KEY - Access Token
      Access token for APIs passed as authorization header in calls. You need to generate this from your Esper Dev Console at `<domain>-api.esper.cloud` where foo is the sub-domain name you gave for your Esper Dev environment when you signed up for your Esper Dev account. Please follow the instructions [here](https://docs.esper.io/home/module/genapikey.html) to generate an access token.
      Once you have the access token, you need to send an authorization header as below

      ```bash

          curl -X GET \
            https://<domain>-api.esper.cloud/api/enterprise/<enterprise_id>/device/ \
            -H 'Authorization: Bearer <ACCESS_TOKEN>' \
            -H 'Content-Type: application/json' \
      ```

      > Please note the use of keyword **Bearer** before the token value.


      You can read more about api key authentication scheme [here](https://swagger.io/docs/specification/authentication/api-keys/).
    name: Authorization
    type: apiKey
    in: header
