swagger: '2.0'
info:
  description: >
    # Introduction

    Esper Manage APIs for Cloud are a set of REST-based APIs that help you programmatically control and monitor your enterprise's dedicated Esper endpoint. Using these APIs, one can orchestrate & manage devices that have been provisioned against your endpoint. Furthermore, this API allows you to manage android applications that get installed on such devices. To read more about the various capabilities of Esper endpoints and Esper managed devices, please visit esper.io.
    This guide describes all the available APIs in detail, along with code samples for you to quickly ramp up to using them.


    You can find out more about Esper at [https://esper.io](https://esper.io)


    You can use your favorite HTTP/REST library for your programming language to use Esper APIs, or you can use one of our SDKs (currently available in [python](https://github.com/esper-io/esper-client-py)).


    This guide documents all the instructions for using Esper API, along with code samples in python and Java. If you find any issues using our API, please reach out to us at developer@esper.io


    To get started you need a developer account with [developer.esper.io](https://developer.esper.io/). Please register youself at https://developer.esper.io/register.


    We've done our best to keep this document up to date, but if you find any issues, please reach out to us at developer@esper.io.


    # SDK

      You are welcome to use your favorite HTTP/REST library for your programming language in order to use these APIs, or you can use our official SDK (currently available in python) to do so.

    # Authentication

    Client needs to send authentication details to access APIs. Following
    authentication schemes are supported:


    #### Basic Authentication

    Client can use username and password to authenticate. These are your
    developer account credentials.

    For example, the client sends HTTP requests with the Authorization header
    that contains the word `Basic` followed by a space and a base64-encoded
    string `username`:`password`.


    ```bash

    curl -X GET \
      https://developer.esper.io/api/enterprise/<enterprise_id>/device/ \
      -H 'Authorization: Basic cl0ZWFkbWluOnNpdG1pbjEyMyQ=' \
      -H 'Content-Type: application/json' \
    ```

    You can read more about basic authentication scheme 
    [here](https://swagger.io/docs/specification/authentication/basic-authentication/)


    #### API Key

    You can generate API keys for your application from Esper dashboard and send
    them in header to authorize. For example:


    ```bash

    curl -X GET \
      https://developer.esper.io/api/enterprise/<enterprise_id>/device/ \
      -H 'API_KEY: abhbvksvdrkjsh' \
      -H 'Content-Type: application/json' \
    ```

    More details to come soon.
  version: 1.0.0
  title: Esper Manage API
  termsOfService: 'http://shoonya.io/terms/'
#  x-logo:
#    url: 'esper.svg'
#  contact:
#    email: developer@esper.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: developer.esper.io
basePath: /api
tags:
  - name: Device
    description: APIs to fetch device information
    externalDocs:
      description: Find out more about device management
      url: 'https://docs.shoonyacloud.com'
  - name: Commands
    description: APIs to run device commands
    externalDocs:
      description: Find out more about device commands
      url: 'https://docs.shoonyacloud.com'
schemes:
  - https
  - http
externalDocs:
#  description: Find out more about Esper
#  url: 'http://shoonya.io'
x-tagGroups:
  - name: API Reference
    tags:
      - Device
      - Commands
